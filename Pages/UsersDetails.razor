@page "/users/{id:int}"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Dettagli Utente</h3>

@if (user == null && errorMessage == null)
{
    <p>Caricamento in corso...</p>
}
else if (errorMessage != null)
{
    <p class="text-danger">@errorMessage</p>
    <button class="btn btn-primary" @onclick="NavigateToHome">Torna alla home</button>
}
else
{
    <p><strong>Id:</strong> @user.Id</p>
    <p><strong>Nome:</strong> @user.Name</p>
    <p><strong>Email:</strong> @user.Email</p>
    <p><strong>Password:</strong> @user.Password</p>
    <p><strong>Ruolo:</strong> @user.Role</p>
    <p><strong>Avatar:</strong> <img src="@user.Avatar" /></p>

    <button class="btn btn-primary" @onclick="NavigateToHome">Torna alla home</button>
}

@code {
    private User? user = null;
    private string? errorMessage = null;

    [Parameter] public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Recupera i dettagli dell'utente dall'API
            user = await Http.GetFromJsonAsync<User>($"https://localhost:5093/users/{id}");

            if (user == null)
            {
                errorMessage = "Utente non trovato.";
            }
        }
        catch (Exception ex)
        {
            // Gestione degli errori
            errorMessage = "Si Ã¨ verificato un errore durante il caricamento dei dettagli dell'utente: " + ex.Message;
        }
    }

    private void NavigateToHome()
    {
        // Naviga verso la homepage
        NavigationManager.NavigateTo("/");
    }

        public class User
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
        public string Role { get; set; } = "customer";
        public string Avatar { get; set; } = string.Empty;
    }

}



